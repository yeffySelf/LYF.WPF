<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:WPFCustomControls">

    <local:TreeViewLineConverter x:Key="LineConverter" />
    <local:Variable2VisibilityConverter x:Key="SelectionMode2Visilibity" />

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid
                        Width="15"
                        Height="13"
                        SnapsToDevicePixels="True">
                        <!--  Rectangle 9x9 pixels  -->
                        <Rectangle
                            Width="9"
                            Height="9"
                            Fill="White"
                            SnapsToDevicePixels="true"
                            Stroke="#FF99B8C7" />
                        <!--  Vertical line inside rectangle  -->
                        <Rectangle
                            x:Name="ExpandPath"
                            Width="1"
                            Height="5"
                            SnapsToDevicePixels="true"
                            Stroke="#FF637B89" />
                        <!--  Horizontal line inside rectangle  -->
                        <Rectangle
                            Width="5"
                            Height="1"
                            SnapsToDevicePixels="true"
                            Stroke="#FF637B89" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:CustomTreeView}">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="ExpanderButtonStyle" Value="{StaticResource ExpandCollapseToggleStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomTreeView}">
                    <Border
                        x:Name="Bd"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ScrollViewer
                            x:Name="_tv_scrollviewer_"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            CanContentScroll="false"
                            Focusable="false"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CustomTreeViewItem}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomTreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="19" />
                            <ColumnDefinition Width="Auto" MaxWidth="19" />
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <!--  Connecting Lines  -->
                        <Rectangle
                            x:Name="HorLn"
                            Height="1"
                            Margin="10,0,0,0"
                            SnapsToDevicePixels="true"
                            Stroke="#FFBBBBBB"
                            StrokeDashArray="0,2"
                            StrokeDashCap="Square" 
                            Visibility="{Binding ShowTreeLine,RelativeSource={RelativeSource AncestorType=local:CustomTreeView},Converter={StaticResource SelectionMode2Visilibity},ConverterParameter='True'}"
                            Style="{Binding TreeLineStyle,RelativeSource={RelativeSource AncestorType=local:CustomTreeView}}"/>
                        <Rectangle
                            x:Name="VerLn"
                            Grid.RowSpan="2"
                            Width="1"
                            SnapsToDevicePixels="true"
                            Stroke="#FFBBBBBB"
                            StrokeDashArray="0,3"
                            StrokeDashCap="Square" 
                            Visibility="{Binding ShowTreeLine,RelativeSource={RelativeSource AncestorType=local:CustomTreeView},Converter={StaticResource SelectionMode2Visilibity},ConverterParameter='True'}"
                            Style="{Binding TreeLineStyle,RelativeSource={RelativeSource AncestorType=local:CustomTreeView}}"/>
                        <ToggleButton
                            x:Name="Expander"
                            ClickMode="Press"
                            VerticalAlignment="Center"
                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{Binding ExpanderButtonStyle,RelativeSource={RelativeSource AncestorType=local:CustomTreeView}}" />
                        <CheckBox
                            Grid.Column="1"
                            IsChecked="{TemplateBinding IsSelected}"
                            VerticalAlignment="Center"
                            IsThreeState="True"
                            IsEnabled="False"
                            Style="{Binding CheckgBoxStyle,RelativeSource={RelativeSource AncestorType=local:CustomTreeView}}"
                            Visibility="{Binding SelectMode, RelativeSource={RelativeSource AncestorType={x:Type local:CustomTreeView}}, Converter={StaticResource SelectionMode2Visilibity},ConverterParameter='Multiple'}" />
                        <Border
                            Name="Bd"
                            Grid.Column="2"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            VerticalAlignment="Center">
                            <ContentPresenter
                                x:Name="PART_Header"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentSource="Header" />
                        </Border>
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="2"
                            Grid.ColumnSpan="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="l">
                            <Setter TargetName="VerLn" Property="Height" Value="8" />
                            <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top" />
                        </DataTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
